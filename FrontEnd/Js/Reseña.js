import { urlBase } from '/FrontEnd/Js/constante.js';  // Aseg√∫rate que esta ruta sea v√°lida

const RESE√ëA_API_BASE_URL = `${urlBase}reviews/`;

console.log(RESE√ëA_API_BASE_URL);

// ======================= ACTUALIZAR RESE√ëA =======================
document.getElementById("rese√±a-update").addEventListener("submit", async function(event) {
    event.preventDefault();

    let id = document.getElementById("rese√±a-id-update").value.trim();
    let comentario = document.getElementById("rese√±a-comentario-update").value.trim();
    let calificacion = parseInt(document.getElementById("rese√±a-calificacion-update").value.trim());
    let eventoId = parseInt(document.getElementById("rese√±a-evento-id-update").value.trim());
    let asistenteId = parseInt(document.getElementById("rese√±a-asistente-id-update").value.trim());

    if (!id || !comentario || isNaN(calificacion) || isNaN(eventoId) || isNaN(asistenteId)) {
        alert("Todos los campos son obligatorios ‚ö†Ô∏è");
        return;
    }

    if (calificacion < 1 || calificacion > 5) {
        alert("La calificaci√≥n debe estar entre 1 y 5 ‚≠ê");
        return;
    }

    let bodyContent = JSON.stringify({
        comment: comentario,
        rating: calificacion,
        event: { id: eventoId },
        assistant: { id: asistenteId }
    });

    try {
        let response = await fetch(`${RESE√ëA_API_BASE_URL}${id}`, {
            method: "PUT",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            },
            body: bodyContent
        });

        let data = await response.json();

        if (response.ok) {
            alert("‚úÖ Rese√±a actualizada con √©xito üéâ");
            document.getElementById("rese√±a-update-form").reset();
        } else {
            alert(`‚ùå Error: ${data.message || "No se pudo actualizar la rese√±a"}`);
        }

        console.log("üì¢ Respuesta del servidor:", data);

    } catch (error) {
        console.error("‚ùå Error en la petici√≥n:", error);
        alert("‚ùå Error de conexi√≥n");
    }
});


// ======================= ELIMINAR RESE√ëA =======================
document.getElementById("rese√±a-delete-form").addEventListener("submit", async function (event) {
    event.preventDefault();

    const id = document.getElementById("rese√±a-id-delete").value.trim();
    const mensaje = document.getElementById("mensaje");

    if (!id) {
        mensaje.innerText = "‚ö†Ô∏è Por favor ingresa un ID v√°lido.";
        mensaje.style.color = "orange";
        return;
    }

    try {
        const response = await fetch(`${RESE√ëA_API_BASE_URL}${id}`, {
            method: "DELETE",
            headers: {
                "Accept": "*/*"
            }
        });

        if (response.ok) {
            mensaje.innerText = `‚úÖ Rese√±a con ID ${id} eliminada correctamente.`;
            mensaje.style.color = "green";
            document.getElementById("rese√±a-delete-form").reset();
            alert("‚úÖ Rese√±a eliminada correctamente.");
        } else {
            const data = await response.json();
            mensaje.innerText = `‚ùå Error al eliminar: ${data.message || "No se pudo eliminar la rese√±a"}`;
            mensaje.style.color = "red";
        }
    } catch (error) {
        console.error("‚ùå Error de conexi√≥n:", error);
        mensaje.innerText = "‚ö†Ô∏è Error de conexi√≥n al eliminar.";
        mensaje.style.color = "red";
    }
});
